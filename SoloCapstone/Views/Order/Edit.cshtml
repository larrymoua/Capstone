@model SoloCapstone.Models.Order


@{
    Layout = "~/Views/Shared/_LayoutLogIn.cshtml";
}

<h2>Edit</h2>

@using SoloCapstone.Models
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.OrderId)
    @Html.HiddenFor(model => model.CustomerName)
    @Html.HiddenFor(model => model.OrderConfirmationNumber)
    @Html.HiddenFor(model => model.coaxialCables)

    @if (ViewContext.HttpContext.User.IsInRole("ProductionManager"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DueDate, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/MM-yyyy " } })*@
                @Html.TextBoxFor(m => m.DueDate, "{0:MM/dd/yyyy}")
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.OrderStatus,
                                new SelectList(Enum.GetValues(typeof(OrderStatus))),
                                "Update Status")
            @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
